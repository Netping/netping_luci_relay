<script type="text/javascript">
//<![CDATA[
L.require('ui').then(function(ui) {
	L.require('dom').then(function(dom) {
		L.require("uci").then(function(uci) {
			uci.load("netping_luci_relay_adapter_snmp").then(function(out){
				var UIAdapterSNMP = ui.AbstractElement.extend(/** @lends LuCI.ui.Textarea.prototype */ {
					__init__: function(relay_id, options) {
						this.fields = {},
						this.proto = "SNMP"
						this.config = "netping_luci_relay_adapter_snmp"
						this.relay_id = relay_id;
						this.options = Object.assign({
							isActive: false,
						}, options);

						var section = uci.get(this.config, relay_id) || false;

						this.fields = {
							"address": new ui.Textfield(section["address"], { 
								maxlength: 128, 
								datatype: "host" 
							}),

							"OID": new ui.Textfield(section["OID"], { 
								maxlength: 128
							}),

							"port": new ui.Textfield(section["port"], { 
								datatype: "rangelength(2,5)",
								htmlStyle: "width: 150px"
							}),

							"community": new ui.TextFieldStyled(section["community"], { 
								datatype: "rangelength(3,8)",
								htmlStyle: "width: 150px"
							}),

						}
						this.options = Object.assign({
							isActive: false,
						}, options);
					},

					/** @override */
					render: function() {
						var classActive = (this.options.isActive) ? ' active' : ''
						container = E('div', { class: 'table modal-section-param adapter snmp' + classActive}, [
							E('div', {class: 'tr table-titles'}, [
								E('div', {class: 'th', style: 'width: 100%'}, _("Параметры протокола " + this.proto)),
								E('div', {class: 'th', style: "text-align: right;"}, _("Значение")),
							]),
							E('div', {class: 'tr cbi-rowstyle-1'}, [
								E('div', {class: 'td'}, "Адрес реле"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['address'].render()
								])
							]),
							E('div', {class: 'tr cbi-rowstyle-2'}, [
								E('div', {class: 'td'}, "OID"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['OID'].render()
								])
							]),
							E('div', {class: 'tr cbi-rowstyle-1'}, [
								E('div', {class: 'td'}, "Community"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['community'].render()
								])
							]),
							E('div', {class: 'tr cbi-rowstyle-2'}, [
								E('div', {class: 'td'}, "Порт"),
								E('div', {class: 'td', style: "text-align: right;"}, [
									this.fields['port'].render()
								])
							]),
						])
						
						return this.bind(container);
					},


					/** @private */
					bind: function(container) {
						this.node = container
						var self = this

						dom.bindClassInstance(container, this);

						// Cusom override:
						// We subscribe EventBus event which is emitted by "DropdownProto" widget (see ui_override)
						window.EventBus.register(this.node, 'bus-proto-changed', [],
							function(ev) {
								if(ev.detail["proto"] == self.proto) {
									container.classList.add("active")
								} else {
									container.classList.remove("active")
								}
							}
						);
					
						return container;
					},
				});

				ui["AdapterSNMP"] = UIAdapterSNMP
			});
		});
	});
});
//]]>
</script>